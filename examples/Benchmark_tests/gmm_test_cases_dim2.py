import torch

all_test_cases = []
# Test Case 1 (C1)
locs = torch.tensor([[-0.0011, 0.0057], [-0.0858, -0.0525], [0.1684, -0.0375], [0.1096, -0.0116], [0.109, 0.1013]])
covariance_matrix = torch.tensor([[[0.183, 0.0], [0.0, 0.0557]], [[0.1582, 0.0], [0.0, 0.1826]], [[0.1817, 0.0], [0.0, 0.0915]], [[0.1217, 0.0], [0.0, 0.0574]], [[0.192, 0.0], [0.0, 0.1215]]])
probs = torch.tensor([0.1336, 0.3278, 0.0777, 0.1361, 0.3249])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 2 (C1)
locs = torch.tensor([[0.0793, -0.0363], [-0.1491, -0.1158], [0.1411, -0.064], [-0.0352, 0.0203]])
covariance_matrix = torch.tensor([[[0.171, 0.0], [0.0, 0.0766]], [[0.1838, 0.0], [0.0, 0.163]], [[0.0647, 0.0], [0.0, 0.1581]], [[0.065, 0.0], [0.0, 0.0996]]])
probs = torch.tensor([0.1744, 0.0569, 0.3588, 0.4099])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 3 (C1)
locs = torch.tensor([[-0.0285, 0.0574], [-0.0354, 0.122]])
covariance_matrix = torch.tensor([[[0.1913, 0.0], [0.0, 0.0618]], [[0.1751, 0.0], [0.0, 0.089]]])
probs = torch.tensor([0.4326, 0.5674])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 4 (C2)
locs = torch.tensor([[-0.0377, 0.0177], [0.0331, 0.0614], [-0.0809, 0.0003], [0.0611, 0.1531], [-0.0952, -0.1554], [-0.006, -0.123], [0.0883, -0.0139]])
covariance_matrix = torch.tensor([[[0.1066, 0.0], [0.0, 0.1945]], [[0.1262, 0.0], [0.0, 0.1278]], [[0.1856, 0.0], [0.0, 0.166]], [[0.1406, 0.0], [0.0, 0.1134]], [[0.0734, 0.0], [0.0, 0.0854]], [[0.178, 0.0], [0.0, 0.1995]], [[0.0771, 0.0], [0.0, 0.0966]]])
probs = torch.tensor([0.1602, 0.0313, 0.1571, 0.1359, 0.317, 0.0791, 0.1195])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 5 (C2)
locs = torch.tensor([[-0.0888, 0.0454], [0.0409, -0.1375], [0.1316, 0.0848], [-0.0522, 0.0491], [0.2136, 0.0776], [0.0313, -0.0189]])
covariance_matrix = torch.tensor([[[0.0592, 0.0], [0.0, 0.0853]], [[0.1309, 0.0], [0.0, 0.0947]], [[0.1813, 0.0], [0.0, 0.1579]], [[0.1291, 0.0], [0.0, 0.1364]], [[0.1731, 0.0], [0.0, 0.1976]], [[0.113, 0.0], [0.0, 0.1888]]])
probs = torch.tensor([0.0283, 0.2694, 0.1643, 0.1884, 0.0639, 0.2857])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 6 (C2)
locs = torch.tensor([[-0.0111, 0.0459], [0.0111, -0.0948], [0.0228, -0.0195], [0.1283, -0.0368], [0.1451, 0.0825], [0.2388, 0.0085]])
covariance_matrix = torch.tensor([[[0.1462, 0.0], [0.0, 0.1469]], [[0.077, 0.0], [0.0, 0.0545]], [[0.126, 0.0], [0.0, 0.0965]], [[0.0634, 0.0], [0.0, 0.1077]], [[0.0768, 0.0], [0.0, 0.1739]], [[0.0892, 0.0], [0.0, 0.1837]]])
probs = torch.tensor([0.2417, 0.2008, 0.0903, 0.1511, 0.0907, 0.2254])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 7 (C3)
locs = torch.tensor([[-0.0775, -0.1042], [0.1013, 0.0294], [0.1498, 0.0188], [0.0402, 0.0525]])
covariance_matrix = torch.tensor([[[0.1094, 0.0], [0.0, 0.165]], [[0.134, 0.0], [0.0, 0.0836]], [[0.141, 0.0], [0.0, 0.1661]], [[0.0982, 0.0], [0.0, 0.1712]]])
probs = torch.tensor([0.3713, 0.0054, 0.1449, 0.4784])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 8 (C3)
locs = torch.tensor([[0.0492, -0.0418], [0.0732, 0.0752], [-0.1092, -0.0604], [-0.1557, 0.1196]])
covariance_matrix = torch.tensor([[[0.0742, 0.0], [0.0, 0.177]], [[0.0693, 0.0], [0.0, 0.1629]], [[0.0882, 0.0], [0.0, 0.0867]], [[0.1853, 0.0], [0.0, 0.1145]]])
probs = torch.tensor([0.2485, 0.399, 0.1466, 0.2058])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 9 (C4)
locs = torch.tensor([[-0.1766, 0.0577], [-0.1873, 0.0708], [-0.1172, 0.0145], [0.1181, 0.0058], [0.0445, 0.1309], [-0.0613, -0.044]])
covariance_matrix = torch.tensor([[[0.1003, 0.0], [0.0, 0.0782]], [[0.1754, 0.0], [0.0, 0.162]], [[0.0635, 0.0], [0.0, 0.1921]], [[0.0666, 0.0], [0.0, 0.1792]], [[0.0787, 0.0], [0.0, 0.1039]], [[0.1954, 0.0], [0.0, 0.0514]]])
probs = torch.tensor([0.1341, 0.1562, 0.0972, 0.225, 0.2439, 0.1436])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 10 (C4)
locs = torch.tensor([[-0.0223, -0.0317], [0.0653, -0.055], [0.0528, -0.0694], [0.0743, 0.0706], [-0.074, -0.0317], [0.2319, -0.1784]])
covariance_matrix = torch.tensor([[[0.0772, 0.0], [0.0, 0.0671]], [[0.1236, 0.0], [0.0, 0.1]], [[0.115, 0.0], [0.0, 0.1847]], [[0.1094, 0.0], [0.0, 0.1549]], [[0.0703, 0.0], [0.0, 0.0923]], [[0.0727, 0.0], [0.0, 0.0901]]])
probs = torch.tensor([0.0376, 0.2739, 0.2109, 0.1871, 0.1971, 0.0933])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 11 (C4)
locs = torch.tensor([[0.0072, 0.0179], [0.038, 0.0761], [0.0382, -0.0145], [-0.0101, -0.0652], [-0.0202, 0.1624], [-0.1487, 0.1141], [-0.0094, -0.0163], [-0.0016, 0.0687], [-0.0832, 0.0853], [-0.0313, -0.0393]])
covariance_matrix = torch.tensor([[[0.1374, 0.0], [0.0, 0.1781]], [[0.199, 0.0], [0.0, 0.1877]], [[0.1677, 0.0], [0.0, 0.1532]], [[0.1851, 0.0], [0.0, 0.1181]], [[0.1631, 0.0], [0.0, 0.0719]], [[0.1772, 0.0], [0.0, 0.0614]], [[0.1016, 0.0], [0.0, 0.1705]], [[0.1945, 0.0], [0.0, 0.1528]], [[0.1916, 0.0], [0.0, 0.0627]], [[0.1761, 0.0], [0.0, 0.0579]]])
probs = torch.tensor([0.1227, 0.0663, 0.188, 0.1241, 0.0071, 0.1077, 0.0519, 0.1821, 0.0626, 0.0874])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 12 (C5)
locs = torch.tensor([[-2.469, -4.2066], [-1.068, -3.148], [0.2516, -4.1535], [-0.7115, -3.4327], [-4.3853, 0.1291]])
covariance_matrix = torch.tensor([[[0.648, 0.0], [0.0, 0.4763]], [[0.9575, 0.0], [0.0, 0.7913]], [[0.9911, 0.0], [0.0, 0.9899]], [[0.4555, 0.0], [0.0, 0.5337]], [[0.3617, 0.0], [0.0, 0.5398]]])
probs = torch.tensor([0.3734, 0.2348, 0.0432, 0.0028, 0.3457])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 13 (C5)
locs = torch.tensor([[-1.2902, 1.0773], [-2.4592, 3.0611], [3.8922, -3.2823], [-2.0036, 1.8928]])
covariance_matrix = torch.tensor([[[0.8066, 0.0], [0.0, 0.3313]], [[0.9128, 0.0], [0.0, 0.8695]], [[0.3806, 0.0], [0.0, 0.6589]], [[0.6811, 0.0], [0.0, 0.9857]]])
probs = torch.tensor([0.2937, 0.1023, 0.2283, 0.3757])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 14 (C5)
locs = torch.tensor([[0.0301, -1.372], [-2.9934, 3.0123]])
covariance_matrix = torch.tensor([[[0.4094, 0.0], [0.0, 0.3879]], [[0.4078, 0.0], [0.0, 0.9431]]])
probs = torch.tensor([0.9693, 0.0307])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 15 (C6)
locs = torch.tensor([[2.5891, -2.3472], [-1.2709, -0.67], [-2.0662, 0.1657], [1.2461, -3.4105], [-5.565, -1.6536], [1.1935, 2.8109], [-0.5878, 4.41], [-0.7496, -0.1946]])
covariance_matrix = torch.tensor([[[0.3827, 0.0], [0.0, 0.9745]], [[0.5428, 0.0], [0.0, 0.4608]], [[0.8758, 0.0], [0.0, 0.559]], [[0.4379, 0.0], [0.0, 0.5541]], [[0.6279, 0.0], [0.0, 0.856]], [[0.778, 0.0], [0.0, 0.9136]], [[0.9784, 0.0], [0.0, 0.5452]], [[0.9561, 0.0], [0.0, 0.6152]]])
probs = torch.tensor([0.0496, 0.1777, 0.1888, 0.1113, 0.1039, 0.0409, 0.1988, 0.1289])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 16 (C6)
locs = torch.tensor([[1.1942, -4.2838], [-2.2552, -4.4481], [2.0104, 2.429], [-0.0259, 2.3531], [1.9403, 1.8977], [0.4042, 1.2272], [-1.7617, -4.0755], [0.5798, 0.0533], [-4.3101, 6.4506]])
covariance_matrix = torch.tensor([[[0.2111, 0.0], [0.0, 0.3212]], [[0.4024, 0.0], [0.0, 0.4082]], [[0.2613, 0.0], [0.0, 0.5211]], [[0.3118, 0.0], [0.0, 0.5016]], [[0.9257, 0.0], [0.0, 0.7956]], [[0.736, 0.0], [0.0, 0.2757]], [[0.8144, 0.0], [0.0, 0.9793]], [[0.3988, 0.0], [0.0, 0.3609]], [[0.8051, 0.0], [0.0, 0.6184]]])
probs = torch.tensor([0.1108, 0.0528, 0.0174, 0.0404, 0.1423, 0.1066, 0.0257, 0.2376, 0.2665])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 17 (C7)
locs = torch.tensor([[-0.559, 0.6103], [-0.93, -0.6702]])
covariance_matrix = torch.tensor([[[0.9699, 0.0], [0.0, 0.8335]], [[0.5299, 0.0], [0.0, 0.7661]]])
probs = torch.tensor([0.3972, 0.6028])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 18 (C7)
locs = torch.tensor([[-1.5977, -2.9567], [1.2696, 2.9085], [4.2325, -6.1377], [1.9855, 0.2514], [2.1631, 5.3425]])
covariance_matrix = torch.tensor([[[0.2467, 0.0], [0.0, 0.7762]], [[0.3717, 0.0], [0.0, 0.9645]], [[0.7368, 0.0], [0.0, 0.9308]], [[0.7819, 0.0], [0.0, 0.4736]], [[0.5943, 0.0], [0.0, 0.3953]]])
probs = torch.tensor([0.1814, 0.2481, 0.1266, 0.1414, 0.3027])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 19 (C8)
locs = torch.tensor([[-0.8606, -1.4019], [-0.4972, -1.0442], [2.6529, -2.4924], [-2.7895, -2.3296], [-2.9366, 1.7597], [1.6473, -4.0288], [-4.6736, 4.1157], [1.4179, -0.2524], [-2.6071, 1.2242], [-3.3415, 0.0939]])
covariance_matrix = torch.tensor([[[0.2166, 0.0], [0.0, 0.2432]], [[0.264, 0.0], [0.0, 0.4109]], [[0.8938, 0.0], [0.0, 0.2778]], [[0.6476, 0.0], [0.0, 0.3391]], [[0.5611, 0.0], [0.0, 0.6667]], [[0.4836, 0.0], [0.0, 0.9517]], [[0.4521, 0.0], [0.0, 0.8511]], [[0.9691, 0.0], [0.0, 0.7973]], [[0.3663, 0.0], [0.0, 0.671]], [[0.355, 0.0], [0.0, 0.9301]]])
probs = torch.tensor([0.0819, 0.1142, 0.1156, 0.084, 0.1136, 0.1156, 0.0377, 0.135, 0.0835, 0.1189])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

# Test Case 20 (C8)
locs = torch.tensor([[3.8129, 0.9674], [-3.9715, 4.3123], [-4.4822, 1.8893], [-2.024, -0.7256], [5.2277, 3.9019], [0.4538, -2.7855], [3.6493, 3.4952], [-0.4668, -1.0791]])
covariance_matrix = torch.tensor([[[0.9371, 0.0], [0.0, 0.4481]], [[0.8643, 0.0], [0.0, 0.2423]], [[0.9743, 0.0], [0.0, 0.3293]], [[0.4588, 0.0], [0.0, 0.4072]], [[0.3145, 0.0], [0.0, 0.7092]], [[0.4861, 0.0], [0.0, 0.7336]], [[0.6993, 0.0], [0.0, 0.4827]], [[0.8172, 0.0], [0.0, 0.8189]]])
probs = torch.tensor([0.172, 0.1885, 0.169, 0.084, 0.1545, 0.0406, 0.1267, 0.0647])
probs = probs / probs.sum(dim=-1, keepdim=True)
all_test_cases.append({"locs": locs, "covariance_matrix": covariance_matrix, "probs": probs})

